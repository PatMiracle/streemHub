openapi: 3.0.3
info:
  title: STREEMHUB.AI API
  version: 1.0.0
  description: A HUB FOR STATE OF THE ART TECH
paths:
  /api/book-summaries/:
    get:
      operationId: api_book_summaries_retrieve
      tags:
      - api
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Book'
          description: ''
    post:
      operationId: api_book_summaries_create
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Book'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Book'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Book'
        required: true
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Book'
          description: ''
  /api/search/search_url/{url}:
    get:
      operationId: api_search_search_url_retrieve
      parameters:
      - in: path
        name: url
        schema:
          type: string
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          description: No response body
  /api/search/search_url_path/{url}:
    get:
      operationId: api_search_search_url_path_retrieve
      parameters:
      - in: path
        name: url
        schema:
          type: string
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          description: No response body
  /api/token/:
    post:
      operationId: api_token_create
      description: |-
        Takes a set of user credentials and returns an access and refresh JSON web
        token pair to prove the authentication of those credentials.
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TokenObtainPair'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TokenObtainPair'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TokenObtainPair'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenObtainPair'
          description: ''
  /api/token/refresh/:
    post:
      operationId: api_token_refresh_create
      description: |-
        Takes a refresh type JSON web token and returns an access type JSON web
        token if the refresh token is valid.
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TokenRefresh'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TokenRefresh'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TokenRefresh'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenRefresh'
          description: ''
  /api/user/add_admin/{id}:
    patch:
      operationId: api_user_add_admin_partial_update
      description: Gives user admin permission
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          description: No response body
  /api/user/admin_users/:
    get:
      operationId: api_user_admin_users_retrieve
      description: Returns all admin users in the database
      tags:
      - api
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          description: No response body
  /api/user/create_user/:
    post:
      operationId: api_user_create_user_create
      description: Create's a normal new user
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/User'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/User'
        required: true
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
  /api/user/remove_admin/{id}:
    delete:
      operationId: api_user_remove_admin_destroy
      description: Remove user admin permission
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
components:
  schemas:
    Book:
      type: object
      properties:
        title:
          type: string
          maxLength: 255
        author:
          type: string
          maxLength: 255
        summary:
          type: string
          readOnly: true
        download_link:
          type: string
          format: uri
          maxLength: 200
        date_created:
          type: string
          format: date
          readOnly: true
      required:
      - author
      - date_created
      - summary
      - title
    TokenObtainPair:
      type: object
      properties:
        email:
          type: string
          writeOnly: true
        password:
          type: string
          writeOnly: true
        access:
          type: string
          readOnly: true
        refresh:
          type: string
          readOnly: true
      required:
      - access
      - email
      - password
      - refresh
    TokenRefresh:
      type: object
      properties:
        access:
          type: string
          readOnly: true
        refresh:
          type: string
      required:
      - access
      - refresh
    User:
      type: object
      properties:
        id:
          type: string
          readOnly: true
        images:
          type: array
          items:
            $ref: '#/components/schemas/UserImage'
        first_name:
          type: string
          maxLength: 255
        last_name:
          type: string
          maxLength: 255
        email:
          type: string
          format: email
          title: Email address
          maxLength: 254
        password:
          type: string
          maxLength: 128
        username:
          type: string
          maxLength: 255
        phone_no:
          type: string
          maxLength: 20
        github:
          type: string
          format: uri
          nullable: true
          maxLength: 200
        linkedin:
          type: string
          format: uri
          nullable: true
          maxLength: 200
        twitter:
          type: string
          format: uri
          nullable: true
          maxLength: 200
        image:
          type: string
          format: uri
          nullable: true
        customlink:
          type: string
          format: uri
          nullable: true
          maxLength: 200
        is_verified:
          type: boolean
        rank:
          type: integer
        no_of_groups:
          type: integer
        no_of_group_is_admin:
          type: integer
        is_staff:
          type: boolean
        is_active:
          type: boolean
      required:
      - email
      - first_name
      - id
      - images
      - is_verified
      - last_name
      - password
      - phone_no
      - rank
      - username
    UserImage:
      type: object
      properties:
        id:
          type: string
          readOnly: true
        image:
          type: string
          format: uri
          nullable: true
      required:
      - id
  securitySchemes:
    jwtAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
